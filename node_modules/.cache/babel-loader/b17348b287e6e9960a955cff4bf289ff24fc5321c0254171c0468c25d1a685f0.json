{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH\\\\RecruitSmart\\\\RecruitSmart Frontend\\\\src\\\\components\\\\UserDashboard\\\\Simulation\\\\Interviewpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InterviewPage() {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [submitMessage, setSubmitMessage] = useState(\"\");\n  const [currentQuestionId, setCurrentQuestionId] = useState(null);\n  const [answerTimer, setAnswerTimer] = useState(30);\n  const [submitTimer, setSubmitTimer] = useState(60);\n  const [isAnswering, setIsAnswering] = useState(false);\n  const [score, setScore] = useState(0);\n  const webcamRef = useRef(null);\n  const answerTimerRef = useRef(null);\n  const submitTimerRef = useRef(null);\n  const fetchQuestion = async (id = null) => {\n    try {\n      setLoading(true);\n      setQuestion(null);\n      const url = id ? `http://127.0.0.1:8000/api/fetch-next-question/?current_question_id=${id}` : \"http://127.0.0.1:8000/api/fetch-next-question/\";\n      const response = await axios.get(url);\n      const data = response.data;\n      if (data.message === \"No more questions available.\") {\n        setQuestion(null);\n        setSubmitMessage(\"Interview completed! Thank you.\");\n        clearInterval(answerTimerRef.current);\n        clearInterval(submitTimerRef.current);\n      } else {\n        setQuestion(data);\n        setCurrentQuestionId(data.id);\n        resetTimers();\n        speakText(data.question);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const enterFullScreen = () => {\n    const elem = document.documentElement;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    }\n  };\n  useEffect(() => {\n    enterFullScreen(); // Enter full-screen mode when the page loads\n    fetchQuestion();\n    answerTimerRef.current = setInterval(() => {\n      setAnswerTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(answerTimerRef.current);\n          handleSkipQuestion();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(answerTimerRef.current);\n  }, []);\n  const resetTimers = () => {\n    if (answerTimerRef.current) clearInterval(answerTimerRef.current);\n    if (submitTimerRef.current) clearInterval(submitTimerRef.current);\n    setAnswerTimer(30);\n    setSubmitTimer(30);\n    setIsAnswering(false);\n    answerTimerRef.current = setInterval(() => {\n      setAnswerTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(answerTimerRef.current);\n          handleSkipQuestion();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const startAnswering = () => {\n    setIsAnswering(true);\n    if (answerTimerRef.current) clearInterval(answerTimerRef.current);\n    submitTimerRef.current = setInterval(() => {\n      setSubmitTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(submitTimerRef.current);\n          handleSkipQuestion();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n  };\n  const handleVoiceInput = () => {\n    const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setUserAnswer(transcript);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n    recognition.start();\n  };\n  const handleSubmit = async () => {\n    if (!userAnswer.trim()) {\n      alert(\"Please provide an answer before submitting.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/submit-response/\", {\n        question_id: currentQuestionId,\n        user_answer: userAnswer\n      });\n      if (response.status === 200) {\n        const data = response.data;\n        setSubmitMessage(data.message || \"Answer submitted successfully!\");\n        setScore(data.score);\n        setUserAnswer(\"\");\n        fetchQuestion(currentQuestionId);\n      } else {\n        setSubmitMessage(\"An error occurred. Please try again.\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error submitting response:\", err);\n      setSubmitMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"A network error occurred. Please check your connection.\");\n    } finally {\n      if (submitTimerRef.current) clearInterval(submitTimerRef.current);\n    }\n  };\n  const speakText = text => {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = \"en-US\";\n    utterance.rate = 1;\n    synth.speak(utterance);\n  };\n  const handleSkipQuestion = () => {\n    setUserAnswer(\"\");\n    setSubmitMessage(\"\");\n    setScore(0);\n    fetchQuestion(currentQuestionId);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interview Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isAnswering ? `Submit Time Left: ${formatTime(submitTimer)}` : `Answer Time Left: ${formatTime(answerTimer)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        videoConstraints: {\n          width: 1280,\n          height: 720,\n          facingMode: \"user\"\n        },\n        style: {\n          width: \"300px\",\n          border: \"2px solid black\",\n          borderRadius: \"10px\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), question && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 24\n        }, this), \" \", question.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: userAnswer,\n          onChange: e => setUserAnswer(e.target.value),\n          rows: \"4\",\n          cols: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startAnswering,\n        disabled: isAnswering,\n        children: \"Answer the Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVoiceInput,\n        disabled: !isAnswering,\n        children: \"Use Voice Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: !isAnswering,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSkipQuestion,\n        children: \"Go to Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this), submitMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: submitMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 31\n    }, this), score && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n_s(InterviewPage, \"+lWhQNYUB/FKMTeXO4EfzKQw3Js=\");\n_c = InterviewPage;\nexport default InterviewPage;\nvar _c;\n$RefreshReg$(_c, \"InterviewPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Webcam","jsxDEV","_jsxDEV","InterviewPage","_s","question","setQuestion","loading","setLoading","error","setError","userAnswer","setUserAnswer","submitMessage","setSubmitMessage","currentQuestionId","setCurrentQuestionId","answerTimer","setAnswerTimer","submitTimer","setSubmitTimer","isAnswering","setIsAnswering","score","setScore","webcamRef","answerTimerRef","submitTimerRef","fetchQuestion","id","url","response","get","data","message","clearInterval","current","resetTimers","speakText","err","enterFullScreen","elem","document","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","setInterval","prev","handleSkipQuestion","startAnswering","handleVoiceInput","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","onresult","event","transcript","results","onerror","console","start","handleSubmit","trim","alert","post","question_id","user_answer","status","_err$response","_err$response$data","text","synth","speechSynthesis","utterance","SpeechSynthesisUtterance","rate","speak","formatTime","seconds","mins","Math","floor","secs","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","padding","display","justifyContent","marginBottom","audio","ref","screenshotFormat","videoConstraints","width","height","facingMode","border","borderRadius","marginRight","difficulty","value","onChange","e","target","rows","cols","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/SIH/RecruitSmart/RecruitSmart Frontend/src/components/UserDashboard/Simulation/Interviewpage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nfunction InterviewPage() {\r\n    const [question, setQuestion] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [userAnswer, setUserAnswer] = useState(\"\");\r\n    const [submitMessage, setSubmitMessage] = useState(\"\");\r\n    const [currentQuestionId, setCurrentQuestionId] = useState(null);\r\n    const [answerTimer, setAnswerTimer] = useState(30);\r\n    const [submitTimer, setSubmitTimer] = useState(60);\r\n    const [isAnswering, setIsAnswering] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const webcamRef = useRef(null);\r\n    const answerTimerRef = useRef(null);\r\n    const submitTimerRef = useRef(null);\r\n\r\n    const fetchQuestion = async (id = null) => {\r\n        try {\r\n            setLoading(true);\r\n            setQuestion(null);\r\n            const url = id\r\n                ? `http://127.0.0.1:8000/api/fetch-next-question/?current_question_id=${id}`\r\n                : \"http://127.0.0.1:8000/api/fetch-next-question/\";\r\n            const response = await axios.get(url);\r\n            const data = response.data;\r\n\r\n            if (data.message === \"No more questions available.\") {\r\n                setQuestion(null);\r\n                setSubmitMessage(\"Interview completed! Thank you.\");\r\n                clearInterval(answerTimerRef.current);\r\n                clearInterval(submitTimerRef.current);\r\n            } else {\r\n                setQuestion(data);\r\n                setCurrentQuestionId(data.id);\r\n                resetTimers();\r\n                speakText(data.question);\r\n            }\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const enterFullScreen = () => {\r\n        const elem = document.documentElement;\r\n        if (elem.requestFullscreen) {\r\n            elem.requestFullscreen();\r\n        } else if (elem.mozRequestFullScreen) {\r\n            elem.mozRequestFullScreen();\r\n        } else if (elem.webkitRequestFullscreen) {\r\n            elem.webkitRequestFullscreen();\r\n        } else if (elem.msRequestFullscreen) {\r\n            elem.msRequestFullscreen();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        enterFullScreen(); // Enter full-screen mode when the page loads\r\n        fetchQuestion();\r\n\r\n        answerTimerRef.current = setInterval(() => {\r\n            setAnswerTimer((prev) => {\r\n                if (prev <= 1) {\r\n                    clearInterval(answerTimerRef.current);\r\n                    handleSkipQuestion();\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(answerTimerRef.current);\r\n    }, []);\r\n\r\n    const resetTimers = () => {\r\n        if (answerTimerRef.current) clearInterval(answerTimerRef.current);\r\n        if (submitTimerRef.current) clearInterval(submitTimerRef.current);\r\n\r\n        setAnswerTimer(30);\r\n        setSubmitTimer(30);\r\n        setIsAnswering(false);\r\n\r\n        answerTimerRef.current = setInterval(() => {\r\n            setAnswerTimer((prev) => {\r\n                if (prev <= 1) {\r\n                    clearInterval(answerTimerRef.current);\r\n                    handleSkipQuestion();\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const startAnswering = () => {\r\n        setIsAnswering(true);\r\n        if (answerTimerRef.current) clearInterval(answerTimerRef.current);\r\n\r\n        submitTimerRef.current = setInterval(() => {\r\n            setSubmitTimer((prev) => {\r\n                if (prev <= 1) {\r\n                    clearInterval(submitTimerRef.current);\r\n                    handleSkipQuestion();\r\n                    return 0;\r\n                }\r\n                return prev - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    const handleVoiceInput = () => {\r\n        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n        recognition.lang = \"en-US\";\r\n        recognition.interimResults = false;\r\n\r\n        recognition.onresult = (event) => {\r\n            const transcript = event.results[0][0].transcript;\r\n            setUserAnswer(transcript);\r\n        };\r\n\r\n        recognition.onerror = (event) => {\r\n            console.error(\"Speech recognition error:\", event.error);\r\n        };\r\n\r\n        recognition.start();\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!userAnswer.trim()) {\r\n            alert(\"Please provide an answer before submitting.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\r\n                \"http://127.0.0.1:8000/api/submit-response/\",\r\n                {\r\n                    question_id: currentQuestionId,\r\n                    user_answer: userAnswer,\r\n                }\r\n            );\r\n\r\n            if (response.status === 200) {\r\n                const data = response.data;\r\n                setSubmitMessage(data.message || \"Answer submitted successfully!\");\r\n                setScore(data.score);\r\n                setUserAnswer(\"\");\r\n                fetchQuestion(currentQuestionId);\r\n            } else {\r\n                setSubmitMessage(\"An error occurred. Please try again.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error submitting response:\", err);\r\n            setSubmitMessage(\r\n                err.response?.data?.error || \"A network error occurred. Please check your connection.\"\r\n            );\r\n        } finally {\r\n            if (submitTimerRef.current) clearInterval(submitTimerRef.current);\r\n        }\r\n    };\r\n\r\n    const speakText = (text) => {\r\n        const synth = window.speechSynthesis;\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        utterance.lang = \"en-US\";\r\n        utterance.rate = 1;\r\n        synth.speak(utterance);\r\n    };\r\n\r\n    const handleSkipQuestion = () => {\r\n        setUserAnswer(\"\");\r\n        setSubmitMessage(\"\");\r\n        setScore(0);\r\n        fetchQuestion(currentQuestionId);\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const mins = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n    };\r\n\r\n    if (loading) return <h1>Loading...</h1>;\r\n    if (error) return <h1>Error: {error}</h1>;\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n            <h1>Interview Question</h1>\r\n            <h2>{isAnswering ? `Submit Time Left: ${formatTime(submitTimer)}` : `Answer Time Left: ${formatTime(answerTimer)}`}</h2>\r\n            \r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginBottom: \"20px\" }}>\r\n                <Webcam\r\n                    audio={false}\r\n                    ref={webcamRef}\r\n                    screenshotFormat=\"image/jpeg\"\r\n                    videoConstraints={{\r\n                        width: 1280,\r\n                        height: 720,\r\n                        facingMode: \"user\",\r\n                    }}\r\n                    style={{\r\n                        width: \"300px\",\r\n                        border: \"2px solid black\",\r\n                        borderRadius: \"10px\",\r\n                        marginRight: \"10px\",\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {question && (\r\n                <div>\r\n                    <h2>{question.question}</h2>\r\n                    <p><strong>Difficulty:</strong> {question.difficulty}</p>\r\n                    <div>\r\n                        <h3>Your Answer:</h3>\r\n                        <textarea\r\n                            value={userAnswer}\r\n                            onChange={(e) => setUserAnswer(e.target.value)}\r\n                            rows=\"4\"\r\n                            cols=\"50\"\r\n                        />\r\n                        <p>{userAnswer}</p>\r\n                    </div>\r\n                    <button onClick={startAnswering} disabled={isAnswering}>\r\n                        Answer the Question\r\n                    </button>\r\n                    <button onClick={handleVoiceInput} disabled={!isAnswering}>\r\n                        Use Voice Input\r\n                    </button>\r\n                    <button onClick={handleSubmit} disabled={!isAnswering}>\r\n                        Submit Answer\r\n                    </button>\r\n                    <button onClick={handleSkipQuestion}>\r\n                        Go to Next Question\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {submitMessage && <p>{submitMessage}</p>}\r\n            {score && <p>{score}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InterviewPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}