{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\SIH\\\\sih\\\\interview-app\\\\src\\\\components\\\\UserDashboard\\\\CompatibilityTest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ReactMic } from \"react-mic\";\nimport Webcam from \"react-webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompatibilityTest = ({\n  onTestComplete\n}) => {\n  _s();\n  const [voiceTestDone, setVoiceTestDone] = useState(false);\n  const [videoTestDone, setVideoTestDone] = useState(false);\n  const [internetSpeed, setInternetSpeed] = useState(null);\n  const handleVoiceTest = recordedBlob => {\n    console.log(\"Recorded Blob:\", recordedBlob);\n    setVoiceTestDone(true);\n  };\n  const handleInternetTest = async () => {\n    try {\n      const response = await fetch(\"https://www.google.com\", {\n        mode: \"no-cors\"\n      });\n      if (response.ok || response.type === \"opaque\") {\n        alert(\"Internet test passed!\");\n      } else {\n        alert(\"Internet test failed.\");\n      }\n    } catch (error) {\n      console.error(\"Internet test error:\", error);\n      alert(\"Internet test failed: Unable to fetch the URL.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Compatibility Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), !voiceTestDone && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Voice Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReactMic, {\n        record: true,\n        onStop: handleVoiceTest,\n        mimeType: \"audio/wav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVoiceTestDone(true),\n        children: \"Skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), voiceTestDone && !videoTestDone && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Video Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVideoTestDone(true),\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), videoTestDone && internetSpeed === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Internet Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInternetTest,\n        children: \"Check Internet Speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), internetSpeed !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Voice Test: \", voiceTestDone ? \"Passed\" : \"Skipped\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Video Test: \", videoTestDone ? \"Passed\" : \"Skipped\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Internet Speed: \", internetSpeed, \" Mbps\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onTestComplete,\n        children: \"Proceed to Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(CompatibilityTest, \"ZhIZfAmkp5Kuk3uvrNTA+2S8WZY=\");\n_c = CompatibilityTest;\nexport default CompatibilityTest;\nvar _c;\n$RefreshReg$(_c, \"CompatibilityTest\");","map":{"version":3,"names":["React","useState","ReactMic","Webcam","jsxDEV","_jsxDEV","CompatibilityTest","onTestComplete","_s","voiceTestDone","setVoiceTestDone","videoTestDone","setVideoTestDone","internetSpeed","setInternetSpeed","handleVoiceTest","recordedBlob","console","log","handleInternetTest","response","fetch","mode","ok","type","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","record","onStop","mimeType","onClick","_c","$RefreshReg$"],"sources":["D:/Projects/SIH/sih/interview-app/src/components/UserDashboard/CompatibilityTest.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { ReactMic } from \"react-mic\";\r\nimport Webcam from \"react-webcam\";\r\n\r\nconst CompatibilityTest = ({ onTestComplete }) => {\r\n    const [voiceTestDone, setVoiceTestDone] = useState(false);\r\n    const [videoTestDone, setVideoTestDone] = useState(false);\r\n    const [internetSpeed, setInternetSpeed] = useState(null);\r\n\r\n    const handleVoiceTest = (recordedBlob) => {\r\n        console.log(\"Recorded Blob:\", recordedBlob);\r\n        setVoiceTestDone(true);\r\n    };\r\n\r\n    const handleInternetTest = async () => {\r\n        try {\r\n          const response = await fetch(\"https://www.google.com\", { mode: \"no-cors\" });\r\n          if (response.ok || response.type === \"opaque\") {\r\n            alert(\"Internet test passed!\");\r\n          } else {\r\n            alert(\"Internet test failed.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Internet test error:\", error);\r\n          alert(\"Internet test failed: Unable to fetch the URL.\");\r\n        }\r\n      };\r\n      \r\n\r\n    return (\r\n        <div>\r\n            <h1>Compatibility Test</h1>\r\n            {/* Voice Test */}\r\n            {!voiceTestDone && (\r\n                <div>\r\n                    <h2>Voice Test</h2>\r\n                    <ReactMic\r\n                        record={true}\r\n                        onStop={handleVoiceTest}\r\n                        mimeType=\"audio/wav\"\r\n                    />\r\n                    <button onClick={() => setVoiceTestDone(true)}>Skip</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Video Test */}\r\n            {voiceTestDone && !videoTestDone && (\r\n                <div>\r\n                    <h2>Video Test</h2>\r\n                    <Webcam />\r\n                    <button onClick={() => setVideoTestDone(true)}>Confirm</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Internet Test */}\r\n            {videoTestDone && internetSpeed === null && (\r\n                <div>\r\n                    <h2>Internet Test</h2>\r\n                    <button onClick={handleInternetTest}>Check Internet Speed</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Summary */}\r\n            {internetSpeed !== null && (\r\n                <div>\r\n                    <h2>Test Summary</h2>\r\n                    <p>Voice Test: {voiceTestDone ? \"Passed\" : \"Skipped\"}</p>\r\n                    <p>Video Test: {videoTestDone ? \"Passed\" : \"Skipped\"}</p>\r\n                    <p>Internet Speed: {internetSpeed} Mbps</p>\r\n                    <button onClick={onTestComplete}>Proceed to Interview</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompatibilityTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}