{"ast":null,"code":"var _MoreVertIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { SessionContext } from \"../AppProvider/index.js\";\nimport { useLocaleText } from \"../shared/locales/LocaleContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * The AccountPreview component displays user account information.\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n *\n * API:\n *\n * - [AccountPreview API](https://mui.com/toolpad/core/api/account-preview)\n */\nfunction AccountPreview(props) {\n  const {\n    slots,\n    variant = 'condensed',\n    slotProps,\n    open,\n    handleClick,\n    sx\n  } = props;\n  const session = React.useContext(SessionContext);\n  const localeText = useLocaleText();\n  if (!session || !session.user) {\n    return null;\n  }\n  const avatarContent = slots?.avatar ? /*#__PURE__*/_jsx(slots.avatar, {}) : /*#__PURE__*/_jsx(Avatar, {\n    src: session.user?.image || '',\n    alt: session.user?.name || session.user?.email || '',\n    sx: {\n      height: variant === 'expanded' ? 48 : 32,\n      width: variant === 'expanded' ? 48 : 32\n    },\n    ...slotProps?.avatar\n  });\n  if (variant === 'expanded') {\n    return /*#__PURE__*/_jsxs(Stack, {\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      sx: {\n        py: 1,\n        px: 2,\n        gap: 2,\n        ...sx\n      },\n      children: [/*#__PURE__*/_jsxs(Stack, {\n        direction: \"row\",\n        justifyContent: \"flex-start\",\n        spacing: 2,\n        children: [avatarContent, /*#__PURE__*/_jsxs(Stack, {\n          direction: \"column\",\n          justifyContent: \"space-evenly\",\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            fontWeight: \"bolder\",\n            noWrap: true,\n            children: session.user?.name\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"caption\",\n            noWrap: true,\n            children: session.user?.email\n          })]\n        })]\n      }), handleClick && (slots?.moreIconButton ? /*#__PURE__*/_jsx(slots.moreIconButton, {}) : /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        onClick: handleClick,\n        ...slotProps?.moreIconButton,\n        sx: {\n          alignSelf: 'center',\n          ...slotProps?.moreIconButton?.sx\n        },\n        children: _MoreVertIcon || (_MoreVertIcon = /*#__PURE__*/_jsx(MoreVertIcon, {\n          fontSize: \"small\"\n        }))\n      }))]\n    });\n  }\n  return /*#__PURE__*/_jsx(Tooltip, {\n    title: session.user.name ?? 'Account',\n    children: slots?.avatarIconButton ? /*#__PURE__*/_jsx(slots.avatarIconButton, {\n      ...slotProps?.avatarIconButton\n    }) : /*#__PURE__*/_jsx(Stack, {\n      sx: {\n        py: 0.5,\n        ...sx\n      },\n      children: /*#__PURE__*/_jsx(IconButton, {\n        onClick: handleClick,\n        \"aria-label\": localeText.iconButtonAriaLabel || 'Current User',\n        size: \"small\",\n        \"aria-controls\": open ? 'account-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": open ? 'true' : undefined,\n        ...slotProps?.avatarIconButton,\n        sx: {\n          width: 'fit-content',\n          margin: '0 auto',\n          ...slotProps?.avatarIconButton?.sx\n        },\n        children: avatarContent\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? AccountPreview.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The handler used when the preview is expanded\n   */\n  handleClick: PropTypes.func,\n  /**\n   * The state of the Account popover\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   */\n  slotProps: PropTypes.shape({\n    avatar: PropTypes.object,\n    avatarIconButton: PropTypes.object,\n    moreIconButton: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   */\n  slots: PropTypes.shape({\n    avatar: PropTypes.elementType,\n    avatarIconButton: PropTypes.elementType,\n    moreIconButton: PropTypes.elementType\n  }),\n  /**\n   * The prop used to customize the styling of the preview\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of account details to display.\n   * @property {'condensed'} condensed - Shows only the user's avatar.\n   * @property {'expanded'} expanded - Displays the user's avatar, name, and email if available.\n   * @default 'condensed'\n   */\n  variant: PropTypes.oneOf(['condensed', 'expanded'])\n} : void 0;\nexport { AccountPreview };","map":{"version":3,"names":["_MoreVertIcon","React","PropTypes","Avatar","Typography","Tooltip","Stack","IconButton","MoreVertIcon","SessionContext","useLocaleText","jsx","_jsx","jsxs","_jsxs","AccountPreview","props","slots","variant","slotProps","open","handleClick","sx","session","useContext","localeText","user","avatarContent","avatar","src","image","alt","name","email","height","width","direction","justifyContent","py","px","gap","children","spacing","fontWeight","noWrap","moreIconButton","size","onClick","alignSelf","fontSize","title","avatarIconButton","iconButtonAriaLabel","undefined","margin","process","env","NODE_ENV","propTypes","func","bool","shape","object","elementType","oneOfType","arrayOf","oneOf"],"sources":["D:/Projects/SIH/sih/interview-app/node_modules/@toolpad/core/Account/AccountPreview.js"],"sourcesContent":["var _MoreVertIcon;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\nimport Tooltip from '@mui/material/Tooltip';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport { SessionContext } from \"../AppProvider/index.js\";\nimport { useLocaleText } from \"../shared/locales/LocaleContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * The AccountPreview component displays user account information.\n *\n * Demos:\n *\n * - [Account](https://mui.com/toolpad/core/react-account/)\n *\n * API:\n *\n * - [AccountPreview API](https://mui.com/toolpad/core/api/account-preview)\n */\nfunction AccountPreview(props) {\n  const {\n    slots,\n    variant = 'condensed',\n    slotProps,\n    open,\n    handleClick,\n    sx\n  } = props;\n  const session = React.useContext(SessionContext);\n  const localeText = useLocaleText();\n  if (!session || !session.user) {\n    return null;\n  }\n  const avatarContent = slots?.avatar ? /*#__PURE__*/_jsx(slots.avatar, {}) : /*#__PURE__*/_jsx(Avatar, {\n    src: session.user?.image || '',\n    alt: session.user?.name || session.user?.email || '',\n    sx: {\n      height: variant === 'expanded' ? 48 : 32,\n      width: variant === 'expanded' ? 48 : 32\n    },\n    ...slotProps?.avatar\n  });\n  if (variant === 'expanded') {\n    return /*#__PURE__*/_jsxs(Stack, {\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      sx: {\n        py: 1,\n        px: 2,\n        gap: 2,\n        ...sx\n      },\n      children: [/*#__PURE__*/_jsxs(Stack, {\n        direction: \"row\",\n        justifyContent: \"flex-start\",\n        spacing: 2,\n        children: [avatarContent, /*#__PURE__*/_jsxs(Stack, {\n          direction: \"column\",\n          justifyContent: \"space-evenly\",\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"body2\",\n            fontWeight: \"bolder\",\n            noWrap: true,\n            children: session.user?.name\n          }), /*#__PURE__*/_jsx(Typography, {\n            variant: \"caption\",\n            noWrap: true,\n            children: session.user?.email\n          })]\n        })]\n      }), handleClick && (slots?.moreIconButton ? /*#__PURE__*/_jsx(slots.moreIconButton, {}) : /*#__PURE__*/_jsx(IconButton, {\n        size: \"small\",\n        onClick: handleClick,\n        ...slotProps?.moreIconButton,\n        sx: {\n          alignSelf: 'center',\n          ...slotProps?.moreIconButton?.sx\n        },\n        children: _MoreVertIcon || (_MoreVertIcon = /*#__PURE__*/_jsx(MoreVertIcon, {\n          fontSize: \"small\"\n        }))\n      }))]\n    });\n  }\n  return /*#__PURE__*/_jsx(Tooltip, {\n    title: session.user.name ?? 'Account',\n    children: slots?.avatarIconButton ? /*#__PURE__*/_jsx(slots.avatarIconButton, {\n      ...slotProps?.avatarIconButton\n    }) : /*#__PURE__*/_jsx(Stack, {\n      sx: {\n        py: 0.5,\n        ...sx\n      },\n      children: /*#__PURE__*/_jsx(IconButton, {\n        onClick: handleClick,\n        \"aria-label\": localeText.iconButtonAriaLabel || 'Current User',\n        size: \"small\",\n        \"aria-controls\": open ? 'account-menu' : undefined,\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": open ? 'true' : undefined,\n        ...slotProps?.avatarIconButton,\n        sx: {\n          width: 'fit-content',\n          margin: '0 auto',\n          ...slotProps?.avatarIconButton?.sx\n        },\n        children: avatarContent\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? AccountPreview.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The handler used when the preview is expanded\n   */\n  handleClick: PropTypes.func,\n  /**\n   * The state of the Account popover\n   * @default false\n   */\n  open: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   */\n  slotProps: PropTypes.shape({\n    avatar: PropTypes.object,\n    avatarIconButton: PropTypes.object,\n    moreIconButton: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   */\n  slots: PropTypes.shape({\n    avatar: PropTypes.elementType,\n    avatarIconButton: PropTypes.elementType,\n    moreIconButton: PropTypes.elementType\n  }),\n  /**\n   * The prop used to customize the styling of the preview\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of account details to display.\n   * @property {'condensed'} condensed - Shows only the user's avatar.\n   * @property {'expanded'} expanded - Displays the user's avatar, name, and email if available.\n   * @default 'condensed'\n   */\n  variant: PropTypes.oneOf(['condensed', 'expanded'])\n} : void 0;\nexport { AccountPreview };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}