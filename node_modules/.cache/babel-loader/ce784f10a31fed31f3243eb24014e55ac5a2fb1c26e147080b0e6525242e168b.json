{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH\\\\RecruitSmart\\\\RecruitSmart Frontend\\\\src\\\\components\\\\UserDashboard\\\\Simulation\\\\ResumeUploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeUploadPage = ({\n  onResumeUploaded\n}) => {\n  _s();\n  const [resumeFile, setResumeFile] = useState(null);\n  const [uploadMessage, setUploadMessage] = useState(\"\");\n  const handleFileChange = event => {\n    setResumeFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!resumeFile) {\n      alert(\"Please upload a resume.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"resume\", resumeFile);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/upload-resume/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.status === 200) {\n        setUploadMessage(\"Resume uploaded successfully!\");\n\n        // Check if onResumeUploaded is a function before calling\n        if (typeof onResumeUploaded === 'function') {\n          onResumeUploaded(response.data);\n        } else {\n          console.warn(\"onResumeUploaded is not a function\");\n        }\n      } else {\n        setUploadMessage(\"Failed to upload resume.\");\n        console.error(\"Error response:\", response.data);\n      }\n    } catch (error) {\n      console.error(\"Error uploading resume:\", error);\n      setUploadMessage(error.message || \"An error occurred while uploading the resume.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resume-upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.doc,.docx\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), uploadMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(ResumeUploadPage, \"/Bc5cih8LbGv9OFF32lXvKSSZbA=\");\n_c = ResumeUploadPage;\nexport default ResumeUploadPage;\nvar _c;\n$RefreshReg$(_c, \"ResumeUploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ResumeUploadPage","onResumeUploaded","_s","resumeFile","setResumeFile","uploadMessage","setUploadMessage","handleFileChange","event","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","post","headers","status","data","console","warn","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["D:/SIH/RecruitSmart/RecruitSmart Frontend/src/components/UserDashboard/Simulation/ResumeUploadPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ResumeUploadPage = ({ onResumeUploaded }) => {\r\n    const [resumeFile, setResumeFile] = useState(null);\r\n    const [uploadMessage, setUploadMessage] = useState(\"\");\r\n\r\n    const handleFileChange = (event) => {\r\n        setResumeFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (!resumeFile) {\r\n            alert(\"Please upload a resume.\");\r\n            return;\r\n        }\r\n    \r\n        const formData = new FormData();\r\n        formData.append(\"resume\", resumeFile);\r\n    \r\n        try {\r\n            const response = await axios.post(\"http://127.0.0.1:8000/api/upload-resume/\", formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            });\r\n    \r\n            if (response.status === 200) {\r\n                setUploadMessage(\"Resume uploaded successfully!\");\r\n                \r\n                // Check if onResumeUploaded is a function before calling\r\n                if (typeof onResumeUploaded === 'function') {\r\n                    onResumeUploaded(response.data);\r\n                } else {\r\n                    console.warn(\"onResumeUploaded is not a function\");\r\n                }\r\n            } else {\r\n                setUploadMessage(\"Failed to upload resume.\");\r\n                console.error(\"Error response:\", response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error uploading resume:\", error);\r\n            setUploadMessage(error.message || \"An error occurred while uploading the resume.\");\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"resume-upload-page\">\r\n            <h2>Upload Your Resume</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" accept=\".pdf,.doc,.docx\" onChange={handleFileChange} />\r\n                <button type=\"submit\">Upload Resume</button>\r\n            </form>\r\n            {uploadMessage && <p>{uploadMessage}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResumeUploadPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}