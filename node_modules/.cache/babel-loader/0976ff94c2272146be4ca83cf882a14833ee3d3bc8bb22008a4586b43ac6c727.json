{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH\\\\RecruitSmart\\\\RecruitSmart Frontend\\\\src\\\\components\\\\UserDashboard\\\\Simulation\\\\FaceRecognition.js\",\n  _s = $RefreshSig$();\n// FaceRecognition.js (new component)\n\nimport { useEffect } from 'react';\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceRecognition = ({\n  onFaceMatched\n}) => {\n  _s();\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = '/models';\n      await faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL);\n      await faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL);\n      await faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL);\n    };\n    loadModels();\n    const handleWebcam = async () => {\n      const video = document.getElementById('webcam');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {}\n      });\n      video.srcObject = stream;\n      video.onplaying = () => {\n        setInterval(async () => {\n          const detections = await faceapi.detectAllFaces(video).withFaceLandmarks().withFaceDescriptors();\n          if (detections.length > 0) {\n            // Compare detected faces here and invoke onFaceMatched if faces match\n          }\n        }, 100);\n      };\n    };\n    handleWebcam();\n    return () => {\n      // Clean up if needed\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"webcam\",\n      width: \"640\",\n      height: \"480\",\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceRecognition, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = FaceRecognition;\nexport default FaceRecognition;\nvar _c;\n$RefreshReg$(_c, \"FaceRecognition\");","map":{"version":3,"names":["useEffect","faceapi","jsxDEV","_jsxDEV","FaceRecognition","onFaceMatched","_s","loadModels","MODEL_URL","nets","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","handleWebcam","video","document","getElementById","stream","navigator","mediaDevices","getUserMedia","srcObject","onplaying","setInterval","detections","detectAllFaces","withFaceLandmarks","withFaceDescriptors","length","children","id","width","height","autoPlay","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SIH/RecruitSmart/RecruitSmart Frontend/src/components/UserDashboard/Simulation/FaceRecognition.js"],"sourcesContent":["// FaceRecognition.js (new component)\r\n\r\nimport { useEffect } from 'react';\r\nimport * as faceapi from 'face-api.js';\r\n\r\nconst FaceRecognition = ({ onFaceMatched }) => {\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      const MODEL_URL = '/models';\r\n      await faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL);\r\n      await faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL);\r\n      await faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL);\r\n    };\r\n\r\n    loadModels();\r\n\r\n    const handleWebcam = async () => {\r\n      const video = document.getElementById('webcam');\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: {} });\r\n      video.srcObject = stream;\r\n\r\n      video.onplaying = () => {\r\n        setInterval(async () => {\r\n          const detections = await faceapi.detectAllFaces(video)\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptors();\r\n\r\n          if (detections.length > 0) {\r\n            // Compare detected faces here and invoke onFaceMatched if faces match\r\n          }\r\n        }, 100);\r\n      };\r\n    };\r\n\r\n    handleWebcam();\r\n\r\n    return () => {\r\n      // Clean up if needed\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <video id=\"webcam\" width=\"640\" height=\"480\" autoPlay muted></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n"],"mappings":";;AAAA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7CN,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,SAAS,GAAG,SAAS;MAC3B,MAAMP,OAAO,CAACQ,IAAI,CAACC,cAAc,CAACC,WAAW,CAACH,SAAS,CAAC;MACxD,MAAMP,OAAO,CAACQ,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACH,SAAS,CAAC;MAC3D,MAAMP,OAAO,CAACQ,IAAI,CAACI,kBAAkB,CAACF,WAAW,CAACH,SAAS,CAAC;IAC9D,CAAC;IAEDD,UAAU,CAAC,CAAC;IAEZ,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;MAC/C,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEN,KAAK,EAAE,CAAC;MAAE,CAAC,CAAC;MACvEA,KAAK,CAACO,SAAS,GAAGJ,MAAM;MAExBH,KAAK,CAACQ,SAAS,GAAG,MAAM;QACtBC,WAAW,CAAC,YAAY;UACtB,MAAMC,UAAU,GAAG,MAAMxB,OAAO,CAACyB,cAAc,CAACX,KAAK,CAAC,CACnDY,iBAAiB,CAAC,CAAC,CACnBC,mBAAmB,CAAC,CAAC;UAExB,IAAIH,UAAU,CAACI,MAAM,GAAG,CAAC,EAAE;YACzB;UAAA;QAEJ,CAAC,EAAE,GAAG,CAAC;MACT,CAAC;IACH,CAAC;IAEDf,YAAY,CAAC,CAAC;IAEd,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAA2B,QAAA,eACE3B,OAAA;MAAO4B,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACC,QAAQ;MAACC,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAACjC,EAAA,CAzCIF,eAAe;AAAAoC,EAAA,GAAfpC,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}