{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\SIH\\\\sih\\\\interview-app\\\\src\\\\components\\\\UserDashboard\\\\Question.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = () => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [response, setResponse] = useState('');\n  const [status, setStatus] = useState(null);\n\n  // Fetch a random question\n  const fetchQuestion = async () => {\n    try {\n      const res = await axios.get('http://127.0.0.1:8000/api/fetch-question/');\n      setQuestion(res.data);\n    } catch (error) {\n      console.error('Error fetching question:', error);\n    }\n  };\n\n  // Handle submitting the user's response\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://127.0.0.1:8000/api/store-response/', {\n        question_id: question.id,\n        user_response: response\n      });\n      setStatus(res.data.message);\n    } catch (error) {\n      console.error('Error submitting response:', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interview Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), question ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }, this), \" \", question.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 14\n        }, this), \" \", question.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Your Answer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: response,\n            onChange: e => setResponse(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"iyZ9ZJg+VNBjmSNUHj0E3UGczA0=\");\n_c = Question;\nfunction InterviewPage() {\n  _s2();\n  const [question, setQuestion] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userAnswer, setUserAnswer] = useState(\"\");\n  const [submitMessage, setSubmitMessage] = useState(\"\");\n  const [currentQuestionId, setCurrentQuestionId] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(10 * 60); // 10 minutes in seconds\n  const [interviewComplete, setInterviewComplete] = useState(false);\n\n  // Fetch the first question or the next question\n  const fetchQuestion = async (id = null) => {\n    try {\n      setLoading(true);\n      const url = id ? `http://127.0.0.1:8000/api/fetch-next-question/?current_question_id=${id}` : \"http://127.0.0.1:8000/api/fetch-next-question/\";\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      if (data.message === \"No more questions available.\") {\n        setQuestion(null);\n        setSubmitMessage(\"Interview completed! Thank you.\");\n        setInterviewComplete(true);\n      } else {\n        setQuestion(data);\n        setCurrentQuestionId(data.id);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchQuestion();\n\n    // Start the timer\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer); // Clear timer when it reaches 0\n          setInterviewComplete(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/submit-response/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question_id: currentQuestionId,\n          user_answer: userAnswer\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSubmitMessage(data.message);\n        setUserAnswer(\"\");\n        fetchQuestion(currentQuestionId); // Fetch the next question\n      } else {\n        setSubmitMessage(data.error);\n      }\n    } catch (err) {\n      setSubmitMessage(\"An error occurred. Please try again.\");\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\n  };\n  if (interviewComplete) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Interview Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thank you for participating in the interview!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interview Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Left: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), question && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), \" \", question.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Your Answer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userAnswer,\n            onChange: e => setUserAnswer(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), submitMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: submitMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), !question && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: submitMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s2(InterviewPage, \"Zh8tv27gCMxnj6MKEg+RvKvX8ho=\");\n_c2 = InterviewPage;\nexport default Question;\nvar _c, _c2;\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"InterviewPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Question","_s","question","setQuestion","response","setResponse","status","setStatus","fetchQuestion","res","get","data","error","console","handleSubmit","e","preventDefault","post","question_id","id","user_response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","difficulty","onSubmit","type","value","onChange","target","_c","InterviewPage","_s2","loading","setLoading","setError","userAnswer","setUserAnswer","submitMessage","setSubmitMessage","currentQuestionId","setCurrentQuestionId","timeLeft","setTimeLeft","interviewComplete","setInterviewComplete","url","fetch","ok","Error","statusText","json","err","timer","setInterval","prev","clearInterval","method","headers","body","JSON","stringify","user_answer","formatTime","seconds","mins","Math","floor","secs","style","textAlign","padding","required","_c2","$RefreshReg$"],"sources":["D:/Projects/SIH/sih/interview-app/src/components/UserDashboard/Question.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Question = () => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [response, setResponse] = useState('');\r\n  const [status, setStatus] = useState(null);\r\n\r\n  // Fetch a random question\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const res = await axios.get('http://127.0.0.1:8000/api/fetch-question/');\r\n      setQuestion(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching question:', error);\r\n    }\r\n  };\r\n\r\n  // Handle submitting the user's response\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://127.0.0.1:8000/api/store-response/', {\r\n        question_id: question.id,\r\n        user_response: response,\r\n      });\r\n      setStatus(res.data.message);\r\n    } catch (error) {\r\n      console.error('Error submitting response:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestion();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Interview Question</h1>\r\n      {question ? (\r\n        <div>\r\n          <p><strong>Question:</strong> {question.question}</p>\r\n          <p><strong>Difficulty:</strong> {question.difficulty}</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>\r\n              Your Answer:\r\n              <input\r\n                type=\"text\"\r\n                value={response}\r\n                onChange={(e) => setResponse(e.target.value)}\r\n              />\r\n            </label>\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          {status && <p>{status}</p>}\r\n        </div>\r\n      ) : (\r\n        <p>Loading question...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction InterviewPage() {\r\n  const [question, setQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [userAnswer, setUserAnswer] = useState(\"\");\r\n  const [submitMessage, setSubmitMessage] = useState(\"\");\r\n  const [currentQuestionId, setCurrentQuestionId] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(10 * 60); // 10 minutes in seconds\r\n  const [interviewComplete, setInterviewComplete] = useState(false);\r\n\r\n  // Fetch the first question or the next question\r\n  const fetchQuestion = async (id = null) => {\r\n    try {\r\n      setLoading(true);\r\n      const url = id\r\n        ? `http://127.0.0.1:8000/api/fetch-next-question/?current_question_id=${id}`\r\n        : \"http://127.0.0.1:8000/api/fetch-next-question/\";\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.statusText}`);\r\n      }\r\n      const data = await response.json();\r\n      if (data.message === \"No more questions available.\") {\r\n        setQuestion(null);\r\n        setSubmitMessage(\"Interview completed! Thank you.\");\r\n        setInterviewComplete(true);\r\n      } else {\r\n        setQuestion(data);\r\n        setCurrentQuestionId(data.id);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestion();\r\n\r\n    // Start the timer\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timer); // Clear timer when it reaches 0\r\n          setInterviewComplete(true);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/api/submit-response/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          question_id: currentQuestionId,\r\n          user_answer: userAnswer,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setSubmitMessage(data.message);\r\n        setUserAnswer(\"\");\r\n        fetchQuestion(currentQuestionId); // Fetch the next question\r\n      } else {\r\n        setSubmitMessage(data.error);\r\n      }\r\n    } catch (err) {\r\n      setSubmitMessage(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n  };\r\n\r\n  if (interviewComplete) {\r\n    return (\r\n      <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n        <h1>Interview Completed</h1>\r\n        <p>Thank you for participating in the interview!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>Error: {error}</h1>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>Interview Question</h1>\r\n      <h2>Time Left: {formatTime(timeLeft)}</h2>\r\n      {question && (\r\n        <div>\r\n          <h2>{question.question}</h2>\r\n          <p>\r\n            <strong>Difficulty:</strong> {question.difficulty}\r\n          </p>\r\n          <form onSubmit={handleSubmit}>\r\n            <label>\r\n              Your Answer:\r\n              <input\r\n                type=\"text\"\r\n                value={userAnswer}\r\n                onChange={(e) => setUserAnswer(e.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <br />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n          {submitMessage && <p>{submitMessage}</p>}\r\n        </div>\r\n      )}\r\n      {!question && <h2>{submitMessage}</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Question;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}