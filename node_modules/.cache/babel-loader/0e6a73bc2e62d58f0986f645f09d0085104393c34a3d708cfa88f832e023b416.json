{"ast":null,"code":"import * as faceapi from 'face-api.js';\n\n// Function to load models\nexport const loadModels = async () => {\n  try {\n    const MODEL_URL = '/models'; // Path where models are stored\n    await faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL);\n    await faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL);\n    await faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL);\n    console.log(\"Models loaded successfully.\");\n    return true; // Return true when models are loaded\n  } catch (error) {\n    console.error(\"Error loading models:\", error);\n    return false; // Return false if loading models fails\n  }\n};\n\n// Function to load the initial image for face detection\nexport const loadInitialImage = async isModelLoaded => {\n  if (!isModelLoaded) {\n    console.error(\"Models not loaded. Cannot perform face detection.\");\n    return;\n  }\n  try {\n    const img = await faceapi.fetchImage('/images/initialImage.jpg'); // Use image from the public folder\n    const detections = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor();\n    if (detections) {\n      console.log(\"Initial image processed. Face detected.\");\n      return detections.descriptor; // Return the face descriptor for comparison\n    } else {\n      console.error(\"No face detected in the initial image.\");\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error loading or processing initial image:\", error);\n    return null;\n  }\n};\n\n// Function to compare descriptors\nconst compareFaces = (descriptor1, descriptor2, threshold = 0.6) => {\n  const distance = faceapi.euclideanDistance(descriptor1, descriptor2);\n  return distance < threshold; // Return true if faces match\n};\n\n// Function to start real-time webcam processing\nexport const startWebcamProcessing = async (videoElement, initialDescriptor, onMismatch) => {\n  if (!initialDescriptor) {\n    console.error(\"Initial descriptor is missing. Cannot compare faces.\");\n    return;\n  }\n  if (!videoElement) {\n    console.error(\"Video element not available.\");\n    return;\n  }\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoElement.srcObject = stream;\n    videoElement.addEventListener('play', async () => {\n      const canvas = faceapi.createCanvasFromMedia(videoElement);\n      document.body.append(canvas);\n      const displaySize = {\n        width: videoElement.width || 640,\n        height: videoElement.height || 480\n      };\n      faceapi.matchDimensions(canvas, displaySize);\n      const intervalId = setInterval(async () => {\n        const detections = await faceapi.detectSingleFace(videoElement).withFaceLandmarks().withFaceDescriptor();\n        if (detections) {\n          const {\n            descriptor\n          } = detections;\n          const isMatching = compareFaces(initialDescriptor, descriptor);\n          if (!isMatching) {\n            onMismatch(); // Trigger mismatch alert\n          }\n        }\n      }, 1000); // Process a frame every second\n\n      // Cleanup logic when video stops\n      videoElement.addEventListener('pause', () => {\n        clearInterval(intervalId);\n        canvas.remove();\n      });\n    });\n  } catch (error) {\n    console.error(\"Error accessing webcam:\", error);\n  }\n};","map":{"version":3,"names":["faceapi","loadModels","MODEL_URL","nets","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","console","log","error","loadInitialImage","isModelLoaded","img","fetchImage","detections","detectSingleFace","withFaceLandmarks","withFaceDescriptor","descriptor","compareFaces","descriptor1","descriptor2","threshold","distance","euclideanDistance","startWebcamProcessing","videoElement","initialDescriptor","onMismatch","stream","navigator","mediaDevices","getUserMedia","video","srcObject","addEventListener","canvas","createCanvasFromMedia","document","body","append","displaySize","width","height","matchDimensions","intervalId","setInterval","isMatching","clearInterval","remove"],"sources":["D:/SIH/RecruitSmart/RecruitSmart Frontend/src/components/UserDashboard/Simulation/faceRecognition.js"],"sourcesContent":["import * as faceapi from 'face-api.js';\r\n\r\n// Function to load models\r\nexport const loadModels = async () => {\r\n    try {\r\n        const MODEL_URL = '/models'; // Path where models are stored\r\n        await faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL);\r\n        await faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL);\r\n        await faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL);\r\n        console.log(\"Models loaded successfully.\");\r\n        return true; // Return true when models are loaded\r\n    } catch (error) {\r\n        console.error(\"Error loading models:\", error);\r\n        return false; // Return false if loading models fails\r\n    }\r\n};\r\n\r\n// Function to load the initial image for face detection\r\nexport const loadInitialImage = async (isModelLoaded) => {\r\n    if (!isModelLoaded) {\r\n        console.error(\"Models not loaded. Cannot perform face detection.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const img = await faceapi.fetchImage('/images/initialImage.jpg'); // Use image from the public folder\r\n        const detections = await faceapi\r\n            .detectSingleFace(img)\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor();\r\n        if (detections) {\r\n            console.log(\"Initial image processed. Face detected.\");\r\n            return detections.descriptor; // Return the face descriptor for comparison\r\n        } else {\r\n            console.error(\"No face detected in the initial image.\");\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error loading or processing initial image:\", error);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Function to compare descriptors\r\nconst compareFaces = (descriptor1, descriptor2, threshold = 0.6) => {\r\n    const distance = faceapi.euclideanDistance(descriptor1, descriptor2);\r\n    return distance < threshold; // Return true if faces match\r\n};\r\n\r\n// Function to start real-time webcam processing\r\nexport const startWebcamProcessing = async (videoElement, initialDescriptor, onMismatch) => {\r\n    if (!initialDescriptor) {\r\n        console.error(\"Initial descriptor is missing. Cannot compare faces.\");\r\n        return;\r\n    }\r\n\r\n    if (!videoElement) {\r\n        console.error(\"Video element not available.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        videoElement.srcObject = stream;\r\n\r\n        videoElement.addEventListener('play', async () => {\r\n            const canvas = faceapi.createCanvasFromMedia(videoElement);\r\n            document.body.append(canvas);\r\n\r\n            const displaySize = {\r\n                width: videoElement.width || 640,\r\n                height: videoElement.height || 480,\r\n            };\r\n            faceapi.matchDimensions(canvas, displaySize);\r\n\r\n            const intervalId = setInterval(async () => {\r\n                const detections = await faceapi\r\n                    .detectSingleFace(videoElement)\r\n                    .withFaceLandmarks()\r\n                    .withFaceDescriptor();\r\n\r\n                if (detections) {\r\n                    const { descriptor } = detections;\r\n                    const isMatching = compareFaces(initialDescriptor, descriptor);\r\n\r\n                    if (!isMatching) {\r\n                        onMismatch(); // Trigger mismatch alert\r\n                    }\r\n                }\r\n            }, 1000); // Process a frame every second\r\n\r\n            // Cleanup logic when video stops\r\n            videoElement.addEventListener('pause', () => {\r\n                clearInterval(intervalId);\r\n                canvas.remove();\r\n            });\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error accessing webcam:\", error);\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}