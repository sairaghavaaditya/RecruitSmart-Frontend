{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\SIH\\\\sih\\\\interview-app\\\\src\\\\components\\\\UserDashboard\\\\UserLogin.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"./Styles/UserLogin.css\";\n\n// const UserLogin = () => {\n//     const [formData, setFormData] = useState({\n//         email: \"\",\n//         password: \"\",\n//     });\n//     const [error, setError] = useState(\"\");\n//     const navigate = useNavigate();\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData({ ...formData, [name]: value });\n//     };\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setError(\"\");\n\n//         try {\n//             const response = await axios.post(\"http://localhost:8000/api/login/\", formData);\n//             if (response.status === 200) {\n//                 // Redirect to the dashboard if login is successful\n//                 navigate(\"/UserDashboard\");\n//             }\n//         } catch (err) {\n//             setError(err.response?.data?.error || \"Something went wrong.\");\n//         }\n//     };\n\n//     return (\n//         <div className=\"login-container\">\n//             <h2>Login</h2>\n//             {error && <p className=\"error-message\">{error}</p>}\n//             <form onSubmit={handleSubmit} className=\"login-form\">\n//                 <input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     placeholder=\"Email\"\n//                     value={formData.email}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     placeholder=\"Password\"\n//                     value={formData.password}\n//                     onChange={handleChange}\n//                     required\n//                 />\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//             <p>\n//                 Don't have an account? <a href=\"/usersignup\">Sign Up</a>\n//             </p>\n//         </div>\n//     );\n// };\n\n// export default UserLogin;\n\n//by chatgpt loginpageupdated code\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Styles/UserLogin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserLogin = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/login/\", formData);\n      if (response.status === 200) {\n        // Redirect to the dashboard if login is successful\n        navigate(\"/CandidateDashboard\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Something went wrong.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"parent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"child\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"RecruitSmart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Enter your email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password: \\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Enter your password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"login-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"button\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/forgotpw\",\n            id: \"forgotpw\",\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Don't have an Account? \\xA0\\xA0 \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/usersignup\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(UserLogin, \"xcvW9Ng/p9oIO/y6kuRs6MepoBM=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLogin;\nexport default UserLogin;\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","UserLogin","_s","formData","setFormData","email","password","error","setError","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","status","err","_err$response","_err$response$data","data","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","placeholder","onChange","required","href","_c","$RefreshReg$"],"sources":["D:/Projects/SIH/sih/interview-app/src/components/UserDashboard/UserLogin.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"./Styles/UserLogin.css\";\r\n\r\n// const UserLogin = () => {\r\n//     const [formData, setFormData] = useState({\r\n//         email: \"\",\r\n//         password: \"\",\r\n//     });\r\n//     const [error, setError] = useState(\"\");\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setFormData({ ...formData, [name]: value });\r\n//     };\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         setError(\"\");\r\n\r\n//         try {\r\n//             const response = await axios.post(\"http://localhost:8000/api/login/\", formData);\r\n//             if (response.status === 200) {\r\n//                 // Redirect to the dashboard if login is successful\r\n//                 navigate(\"/UserDashboard\");\r\n//             }\r\n//         } catch (err) {\r\n//             setError(err.response?.data?.error || \"Something went wrong.\");\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <h2>Login</h2>\r\n//             {error && <p className=\"error-message\">{error}</p>}\r\n//             <form onSubmit={handleSubmit} className=\"login-form\">\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     name=\"email\"\r\n//                     placeholder=\"Email\"\r\n//                     value={formData.email}\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     name=\"password\"\r\n//                     placeholder=\"Password\"\r\n//                     value={formData.password}\r\n//                     onChange={handleChange}\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Login</button>\r\n//             </form>\r\n//             <p>\r\n//                 Don't have an account? <a href=\"/usersignup\">Sign Up</a>\r\n//             </p>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default UserLogin;\r\n\r\n\r\n\r\n\r\n\r\n//by chatgpt loginpageupdated code\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Styles/UserLogin.css\";\r\n\r\nconst UserLogin = () => {\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n    const [error, setError] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n\r\n        try {\r\n            const response = await axios.post(\"http://localhost:8000/api/login/\", formData);\r\n            if (response.status === 200) {\r\n                // Redirect to the dashboard if login is successful\r\n                navigate(\"/CandidateDashboard\");\r\n            }\r\n        } catch (err) {\r\n            setError(err.response?.data?.error || \"Something went wrong.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"parent\">\r\n            <div id=\"child\">\r\n                <h3>RecruitSmart</h3>\r\n                <h3>Sign In</h3>\r\n\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                <form id=\"login-form\" onSubmit={handleSubmit}>\r\n                    <span>\r\n                        <label htmlFor=\"email\">Email: &nbsp;</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </span>\r\n                    <span>\r\n                        <label htmlFor=\"password\">Password: &nbsp;</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={formData.password}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </span>\r\n\r\n                    <div id=\"login-container\">\r\n                        <button id=\"button\" type=\"submit\">\r\n                            Login\r\n                        </button>\r\n                        <a href=\"/forgotpw\" id=\"forgotpw\">\r\n                            Forgot Password?\r\n                        </a>\r\n                    </div>\r\n                </form>\r\n\r\n                <h3>\r\n                    Don't have an Account? &nbsp;&nbsp; <a href=\"/usersignup\">Register</a>\r\n                </h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}